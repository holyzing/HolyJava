<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.holy.mapper.OrdersMapper">
	<!-- 订单一对一客户 客户一对多订单  group by user.id -->
	<!-- resultType: 
			使用resultType来进行一对一结果映射，查询出的列的个数和映射的属性的个数要一致,它是一种平铺式的映射.
			如果pojo中没有包括查询出来的列名，需要增加列名对应的属性，比如通过继承来实现属性的扩展，即可完成映射。
			如果没有查询结果的特殊要求建议使用resultType。
			resultMap : 
			需要单独定义resultMap，如果对查询结果需要嵌套映射，使用resultMap可以完成将关联查询列映射到pojo属性的属性中。
			比如：查询订单列表，然后在点击列表中查看订单明细按钮
				 resultMap可以实现延迟加载，resultType无法实现延迟加载。
	-->
	<sql id="select_orders">
		orders.id,
		orders.user_id,
		orders.number,
		orders.createtime,
		orders.note
	</sql>
	<sql id="select_user">
		user.username,
		user.address
	</sql>
	<select id="findOrdersUser" resultType="com.holy.entity.OrdersExt">
		Select
		<include refid="select_orders" />
		,
		<include refid="select_user"></include>
		from orders,user
		where orders.user_id = user.id
	</select>
	<select id="getOrdersForUser"  resultType="com.holy.entity.OrdersExt">
		SELECT 
		  orders.`id`,
		  orders.`user_id`,
		  orders.`number`,
		  user.`username`,
		  user.`sex` 
		FROM
  			orders,
  			user
		WHERE orders.`user_id` = user.`id`
	</select>
	
	<resultMap type="com.holy.entity.OrdersExt" id="OrdersUserRstMap">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="number" property="number" />
		<result column="createtime" property="createtime" />
		<result column="note" property="note" />
		<!-- 
			property：指定关联对象要映射到Orders的哪个属性上 
			javaType：指定关联对象所要映射的java类型
		  -->
		<!-- id标签：指定关联对象结果集的唯一标识，很重要，不写不会报错，但是会影响性能 -->
		<association property="user" javaType="com.holy.entity.User">
			<id column="user_id" property="id" />
			<result column="username" property="username" />
			<result column="address" property="address" />
		</association>
	</resultMap>
	<select id="findOrdersUserRstMap" resultMap="OrdersUserRstMap">
		Select
		<include refid="select_orders" />
		,
		<include refid="select_user"></include>
		from orders,user
		where orders.user_id = user.id
	</select>
	<resultMap type="com.holy.entity.OrdersExt" id="OrdersUserLazyLoadingRstMap">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="number" property="number" />
		<result column="createtime" property="createtime" />
		<result column="note" property="note" />
		<!-- 延迟加载用户信息 -->
		<!-- select：指定延迟加载需要执行的statement的id（是根据user_id查询用户信息的statement）
			 我们使用UserMapper.xml中的findUserById完成根据用户ID（user_id）查询用户信息
		     如果findUserById不在当前mapper中，前边需要加namespace
		     column：主信息表中需要关联查询的列，此处是user_id,如果延迟加载属性对应的statement的需要
		     		传入的字段大于1，则用 column={主表字段查出来的字段=入参属性} 代替对象parameterType
		-->
		<association property="user" select="com.holy.mapper.UserMapper.findUserById" column="user_id"></association>
	</resultMap>
	<select id="findOrdersUserLazyLoading" resultMap="OrdersUserLazyLoadingRstMap">
		SELECT * FROM orders
	</select>
	<!-- extends：继承已有的ResultMap，值为继承的ResultMap的唯一标示 
				  但是它继承的resultMap的type和它本身的type要保持一致。-->
	<resultMap type="com.holy.entity.OrdersExt" id="OrdersAndOrderdetailRstMap" extends="OrdersUserRstMap">
		<!-- 映射关联关系（一对多） -->
		<!-- collection标签：定义一个一对多关系
			ofType：指定该集合参数所映射的类型
		 -->
		<collection property="detailList" ofType="Orderdetail">
			<!-- 查询结果集中的别名字段进行映射 -->
			<id column="detail_id" property="id" /> 
			<result column="items_id" property="itemsId" />
			<result column="items_num" property="itemsNum" />
		</collection>
	</resultMap>
	<!-- 查询订单信息，包括用户名称、用户地址，订单商品信息（嵌套结果） -->
	<select id="findOrdersAndOrderdetailRstMap" resultMap="OrdersAndOrderdetailRstMap">
		Select
		<include refid="select_orders" />
		,
		<include refid="select_user"/>
		,
		orderdetail.id detail_id,
		orderdetail.items_id,
		orderdetail.items_num
		from orders,user,orderdetail
		where orders.user_id = user.id
		and
		orders.id = orderdetail.orders_id
	</select>
</mapper>


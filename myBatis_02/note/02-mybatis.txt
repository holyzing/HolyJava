						记忆力下降的厉害啊！感觉总是记不住东西，很多时候你要自己说服自己
1-mybatis用到的代理：jdk的动态代理 cglib的动态代理
2-list中的Contains方法的使用：默认比较的是对象的引用，如果比较对象内容则需要实现equals方法
3-集合如果要实现对象排序，有两种方式：一种是自定义排序 对象的类需要实现comparable接口
  另一种是在使用 Collections.sort(list,new Comparator(){})匿名内部类
4-类 对象 对象的引用 实体      vpn和nginx的使用和学习
5-模式：单例模式：
  	   工厂模式：
       代理模式：
5-java默认接口的方法是public和abstract的，定义接口时可以不进行声明
6-this,在运行时所指向的就是对象实体，通过this.getClass()可以获得该对象实体对应类的字节码
----------------------------------------------------------------------
mybatis的高级映射：
	1-在hibernate的映射过程中需要深刻理解对象模型关系，而mybatis则需要理解数据（表）模型之间的关系
	2-在hibernate的对象模型关系中有 一对一 一对多 多对一 多对多，而mybatis的数据关系不强调 多对一
	3-数据库级别的主外键分析是为了在业务上进行主外键分析，而实际的数据库是不进行表与表直接的外键连接的，
	  只是提供外键字段的，因为一旦由数据库维护外键关系，则存在增删改查的级联问题！
	  特别是在电商中，是允许存在冗余数据的，虽然级联删除是一件很严谨的事！
	4-一个用户可以创建多个订单，但是一个订单由一个用户创建
	  一个订单包含多个订单明细，但是一条订单明细包含在一个订单中
	  一个订单明细对应一件商品，一件商品在一个订单中对应一条订单明细，一件商品中在多个订单中对应多个订单明细
	  
	  一件商品可以包含在多个订单中，一个订单中有多个商品         //用户与商品没有必然联系
	  一个用户有多个订单，一个订单有多个订单明细、一个订单明细对应一个商品，所以一个用户对应多个商品
	  一个商品对应多个订单明细，一个订单明细对应一个订单，一个订单对应一个用户，所以一个商品对应多个用户
	5-通过连接方式可以根据需求屏蔽空值   左(外) 右(外) 内 交叉 
-------------------------------------------------------------------------
mybatis的缓存：Mybatis的缓存，包括一级缓存（默认使用）和二级缓存（配置开启）

	一级缓存指的就是sqlsession级别的缓存，在操作数据库时需要构造 sqlSession对象，
	在对象中有一个数据结构（HashMap）用于存储缓存数据。该map就是一级缓存区域
	不同的sqlSession之间的缓存数据区域（HashMap）是互相不影响的。
	一级缓存中的key是由sql语句、条件、statement等信息组成一个唯一值。
	一级缓存中的value，就是查询出的结果的映射对象。
	
	二级缓存指的就是同一个namespace下的mapper，二级缓存中，也有一个map结构，
	这个区域和一级缓存区域缓存机制一样。
	二级缓存是mapper级别的缓存，多个SqlSession去操作同一个Mapper的sql语句，
	多个SqlSession可以共用二级缓存，二级缓存是跨SqlSession的。
	
	如果sqlSession去执行commit操作（执行插入、更新、删除），清空SqlSession中的一级缓存，
	这样做的目的为了让缓存中存储的是最新的信息，避免脏读。
	
	原理：localcache 存储唯一标示的statement，将引用交给 一级缓存或二级缓存来实现不同级别的缓存
--------------------------------------------------------------------------
	Mybatis本身是一个持久层框架，自身无法实现分布式缓存，需要和其它分布式缓存框架进行整合。
    redis、memcached、ehcache 是分布式的缓存框架。对缓存数据进行集中管理（redis集群）
    
    Mybatis提供了一个cache接口，同时它自己有一个默认的实现类PerpetualCache。
    	public class PerpetualCache implements Cache
	通过cache接口可以实现mybatis缓存数据通过其他缓存数据库整合，mybatis的特长是sql，
	缓存数据管理不是mybatis的特长，为了提高mybatis的性能，所以需要mybatis和第三方缓存数据库整合，
	比如ehcache、memcache、redis等！实际生产中多个服务器访问同一个缓存机制 
	
	tomcat的并发访问量约为四百个，不行，其它的行也行不到哪里去？ 啊哈哈哈哈哈哈哈哈
	为此通过集群的搭建以及nginx实现(软)负载均衡。f5硬负载，一般并发达不到非得使用硬负载的量级
	在负载均衡过程中是有损耗的
	
	带宽：
		上行：请求带宽占用小
		下行：响应带宽占用大，可能出现带宽阻塞
	对应用服务器进行线性扩展：实现负载均衡
	对数据库进行优化实现负载均衡，实现读写分离(显然读写分离之间要有同步机制) 数据库的写操作涉及到事物管理
	功能测试 性能测试 安全测试  电商安全.mmap
	开源的数据库连接池c3p0、dbcp、proxool三种,
	其中: Spring 推荐使用dbcp; Hibernate 推荐使用c3p0和proxool;
	阿里巴巴推出的国产数据库连接池，据网上测试对比，比目前的DBCP或C3P0数据库连接池性能更好，
	Druid与其他数据库连接池使用方法基本一样（与DBCP非常相似），将数据库的连接信息全部配置给DataSource对象。
--------------------------------------------------------------------------
待办：
	mybatis的执行流程（源码跟踪）？   delegate
	返回主键与insert在事物下的执行顺序？	     
	junit的debug无效！！！  
	缓存的机制原理
	io和thread和collection
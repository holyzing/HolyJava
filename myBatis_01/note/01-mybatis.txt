1-普通dao的开发方式(由ibatis遗留下的开发方式)和mapper代理的开发方式（开发接口）
2-mybatis根据实体类自动生成mapper类以及dao层及相关sql配置文件
3-全局配置文件 映射文件 输入映射 输出映射 动态sql ibatis依然再用
4-封装了jdbc的框架 hibernate是一个完全的orm框架，而mybatis不是完全的 
  只关注sql本身 不需要去关注 连接的创建 statement的创建，                    所谓sql写的好才是真的好
  需求是所见的，直接可以通过sql所得，在互联网应用中是经常使用的 ，hibernate相对就多此一举了
5-mybatis将输入参数和输出结果进行映射，他不会将对象关系进行映射！所以使用上没有hibernate繁琐
   	jdbc：没有任何映射，没有任何关系，原生态的Java硬编码
   	hibernate：完全实现sql到对象的映射（实体与关系）
   	mybatis：仅仅实现sql中参数的输入与执行结果的映射。对象实体映射不完整且不进行关系映射
6-mybatis封装jdbc（hibernate差不多）
	创建连接时的硬编码 对应 全局配置文件
	preparestatment阶段的硬编码 对应 映射文件
	频繁的关闭连接数据库会造成数据库的性能下降 对应连接池	（在全局配置文件中配置）
	
vpn： vitrual personal net，淘宝登录模式. 局域网的加密访问
nginx：负载均衡，平衡一万个请求，分发请求，可针对请求接口进行将请求分发，
7-框架原理 （一次理解永远记住）
 显然各种框架的关键就是映射文件对原硬编码的封装，mybatis也得沟通
 ----------------------------------------------------------------
  全局配置文件：用来配置数据源,事物以及连接池等mybatis的运行时信息   sqlMapConfig.xml
  映射配置文件：对statement阶段的sql语言以及sql参数及输出结果的配置 user.xml(普通dao) UserMapper（Mapper代理方式）
    
  文件加载器加载配置文件 封装为 sqlSessionFactory 会话工厂，用来生产sqlSession
  
  会话 SqlSession是一个面向程序员的接口，程序员使用它调用方法实现对数据库的增删改查（CRUD）
  该接口有一个默认的实现（mybatis提供）为DefaultSqlSession
  
  在mybatis的实现过程中不是直接操作数据库的，在底层有一个executor（执行器）接口来操作数据库
  mybatis提供两个实现：
  	基本执行器：不是默认的，如果使用基本执行器需要配置（????）
  	缓存执行器：也和hibernate一样分一级缓存（Session），二级缓存（SessionFactory）
  sqlSession上层调用执行器操作数据库
  
  MappedStatement：顾名思义 已映射封装的statement 包括 sql语句 sql参数（条件）
                  以及提供接收返回结果的封装
   输入参数以及输出结果涉及到的类型 包括 
   	简单类型：(byte，char，short，int，long，float，double，boolean）
   			boolean变量当作int处理，boolean数组当作byte数组处理
   	pojo：String,自定义java类（vo类，po类）提供get和set方法
   	集合：包括hashMap
----------------------------------------------------------------
 一般配置文件都不是说名称是固定的，因为加载配置文件都是指定路径的，
 即使struts配置文件默认存放在类路径下，命名为struts.xml，
 但是它也可以在web.xml中指定加载路径，log4j配置文件默认存放在类路径
 软件行业中约定（规范）大于规定，就是大家这么命名，你也那样命名即可
 ----------------------------------------------------------------
 #### mybatis3.3.*中DefaultVFS的logger乱码问题 ####
org.mybatis:mybatis:jar:3.3.0和3.3.1两个版本的
org.apache.ibatis.io.DefaultVFS类中，首先日志对象的参数传递错误
（private static final Log log = LogFactory.getLog(ResolverUtil.class);
误传为ResolverUtil.class），
由于line：98的InputStreamReader初始化时没有传递字符集参数，导致line：102记录日志出现中文乱码；
这个bug在3.4.2中已经修复，可以更换3.4.X解决，对于没有强迫症的朋友无伤大雅了。
----------------------------------------------------------------
log4j的日志级别log4j.rootLogger=DEBUG, stdout 设置为 INFO或者ERROR
----------------------------------------------------------------
在linux下mysql的表名是区分大小写的
----------------------------------------------------------------
mybatis与hibernate的区别及各自应用场景
	Mybatis技术特点：
		1、通过直接编写SQL语句，可以直接对SQL进行性能的优化；
		2、学习门槛低，学习成本低。只要有SQL基础，就可以学习mybatis，而且很容易上手；
		3、由于直接编写SQL语句，所以灵活多变，代码维护性更好。
		4、不能支持数据库无关性，即数据库发生变更，要写多套代码进行支持，移植性不好。
		5、需要编写结果映射。
	Hibernate技术特点：
		1、标准的orm框架，程序员不需要编写SQL语句。
		2、具有良好的数据库无关性，即数据库发生变化的话，代码无需再次编写。
		3、学习门槛高，需要对数据关系模型有良好的基础，而且在设置OR映射的时候，需要考虑好性能和对象模型的权衡。
		4、程序员不能自主的去进行SQL性能优化。优化也得优化对象模型的关系，这对模型设计产生影响！！
	Mybatis应用场景：
		需求多变的互联网项目，例如电商项目。
	Hibernate应用场景：
		需求明确、业务固定的项目，例如OA项目、ERP项目等。

  
  
 
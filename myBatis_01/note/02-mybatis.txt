						记忆力下降的厉害啊！感觉总是记不住东西，很多时候你要自己说服自己
1-mybatis用到的代理：jdk的动态代理 cglib的动态代理
2-list中的Contains方法的使用：默认比较的是对象的引用，如果比较对象内容则需要实现equals方法
3-集合如果要实现对象排序，有两种方式：一种是自定义排序 对象的类需要实现comparable接口
  另一种是在使用 Collections.sort(list,new Comparator(){})匿名内部类
4-类 对象 对象的引用 实体      vpn和nginx的使用和学习
5-模式：单例模式：
  	   工厂模式：
       代理模式：
5-java默认接口的方法是public和abstract的，定义接口时可以不进行声明
6-this,在运行时所指向的就是对象实体，通过this.getClass()可以获得该对象实体对应类的字节码
----------------------------------------------------------------------
mybatis的高级映射：
	1-在hibernate的映射过程中需要深刻理解对象模型关系，而mybatis则需要理解数据（表）模型之间的关系
	2-在hibernate的对象模型关系中有 一对一 一对多 多对一 多对多，而mybatis的数据关系不强调 多对一
	3-数据库级别的主外键分析是为了在业务上进行主外键分析，而实际的数据库是不进行表与表直接的外键连接的，
	  只是提供外键字段的，因为一旦由数据库维护外键关系，则存在增删改查的级联问题！
	  特别是在电商中，是允许存在冗余数据的，虽然级联删除是一件很严谨的事！
	4-一个用户可以创建多个订单，但是一个订单由一个用户创建
	  一个订单包含多个订单明细，但是一条订单明细包含在一个订单中
	  一个订单明细对应一件商品，一件商品在一个订单中对应一条订单明细，一件商品中在多个订单中对应多个订单明细
	  
	  一件商品可以包含在多个订单中，一个订单中有多个商品         //用户与商品没有必然联系
	  一个用户有多个订单，一个订单有多个订单明细、一个订单明细对应一个商品，所以一个用户对应多个商品
	  一个商品对应多个订单明细，一个订单明细对应一个订单，一个订单对应一个用户，所以一个商品对应多个用户
	  
	     
	     
	     
	  
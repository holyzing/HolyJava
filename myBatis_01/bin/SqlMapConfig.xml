<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<!-- SqlMapConfig.xml的配置内容和顺序如下（顺序不能乱）：
		Properties（属性）
		Settings（全局参数设置）
		typeAliases（类型别名）
		typeHandlers（类型处理器）:mybatis已经默认提供
		objectFactory（对象工厂） :对象工厂，比如与spring整合时提供的工厂
		plugins（插件）          :mybatis本身是不支持分页的
		environments（环境信息集合）
			environment（单个环境信息）
				transactionManager（事物）
				dataSource（数据源）
		mappers（映射器） 
		xml中& 需要转义 &amp;
	-->
<configuration>
	<!-- 引入数据库连接信息的配置文件:
			由resource引入的键值对 在 property标签 引入的键值对之后加载 
			parameterType的值会和properties的属性值发生冲突-->
	<properties resource="db.properties">
		<property name="db.name" value="123"/>
	</properties>
	<!-- 全局参数配置，比如配置二级缓存开启等 -->
	<!-- <settings></settings> -->

	<!-- 对自定义PO类定义别名 ：提供别名可以在指定参数类型或者返回类型时只写类型的别名，而不是全限定名
			1：其实mybatis已经提供了java简单类型的别名
			2: 可但对为一个po类指定别名，也可以将一个包下的所有po类指定别名为po类的类名-->
	<typeAliases>
		<!-- 单个别名定义 -->
		<!-- <typeAlias type="com.holy.entity.User" alias="userldy"/> -->

		<!-- 批量别名定义（推荐） -->
		<!-- package：指定包名称来为该包下的po类声明别名，默认的别名就是类名（首字母大小写都可） -->
		<package name="com.holy.entity" />
	</typeAliases>

	<!-- 配置mybatis的环境信息，与spring整合，该信息由spring来管理 -->
	<environments default="development">
		<environment id="development">
			<!-- 配置JDBC事务控制，由mybatis进行管理 -->
			<transactionManager type="JDBC"> </transactionManager>
			<!-- 配置数据源，采用mybatis连接池 -->
			<dataSource type="POOLED">
				<property name="driver" value="${db.driver}" />
				<property name="url" value="${db.url}" />
				<property name="username" value="${db.username}" />
				<property name="password" value="${db.password}" />
			</dataSource>
		</environment>
	</environments>

	<!-- 加载映射文件 
			mapper resource:使用相对于类路径的资源
			mapper url:使用完全限定路径
			mapper class：使用mapper接口的全限定名 
				     注意：此种方法要求mapper接口和mapper映射文件要名称相同，且放到同一个目录下；
			package name：注册指定包下的所有映射文件
					 注意：此种方法要求mapper接口和mapper映射文件要名称相同，且放到同一个目录下；
	 -->
	<mappers>
		<mapper resource="User.xml" />
		<package name="com.holy.mapper" />
	</mappers>
</configuration>
